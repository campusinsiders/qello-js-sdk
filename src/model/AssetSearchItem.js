/**
 * Qello API
 * REST API <!-- <br/> <br/> <a href='#' id='' onclick='showRestJSONObjectsHttpAPI();'>Qello API (JSON Requests)</a> -->
 *
 * OpenAPI spec version: 1.1.4
 * Contact: contact@qello.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.QelloApi) {
      root.QelloApi = {};
    }
    root.QelloApi.AssetSearchItem = factory(root.QelloApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AssetSearchItem model module.
   * @module model/AssetSearchItem
   * @version 1.1.4
   */

  /**
   * Constructs a new <code>AssetSearchItem</code>.
   * @alias module:model/AssetSearchItem
   * @class
   */
  var exports = function() {
    var _this = this;










  };

  /**
   * Constructs a <code>AssetSearchItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AssetSearchItem} obj Optional instance to populate.
   * @return {module:model/AssetSearchItem} The populated <code>AssetSearchItem</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'Number');
      }
      if (data.hasOwnProperty('media_id')) {
        obj['media_id'] = ApiClient.convertToType(data['media_id'], 'Number');
      }
      if (data.hasOwnProperty('classification')) {
        obj['classification'] = ApiClient.convertToType(data['classification'], 'String');
      }
      if (data.hasOwnProperty('created')) {
        obj['created'] = ApiClient.convertToType(data['created'], 'String');
      }
      if (data.hasOwnProperty('modified')) {
        obj['modified'] = ApiClient.convertToType(data['modified'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('published')) {
        obj['published'] = ApiClient.convertToType(data['published'], 'String');
      }
      if (data.hasOwnProperty('meta')) {
        obj['meta'] = ApiClient.convertToType(data['meta'], ['String']);
      }
      if (data.hasOwnProperty('images')) {
        obj['images'] = ApiClient.convertToType(data['images'], Object);
      }
    }
    return obj;
  }

  /**
   * Asset Id
   * @member {Number} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Media Id for playable resources
   * @member {Number} media_id
   */
  exports.prototype['media_id'] = undefined;
  /**
   * Asset Classification
   * @member {String} classification
   */
  exports.prototype['classification'] = undefined;
  /**
   * Date of Creation
   * @member {String} created
   */
  exports.prototype['created'] = undefined;
  /**
   * Date of Last Modification
   * @member {String} modified
   */
  exports.prototype['modified'] = undefined;
  /**
   * Asset Status
   * @member {module:model/AssetSearchItem.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Published or not
   * @member {module:model/AssetSearchItem.PublishedEnum} published
   */
  exports.prototype['published'] = undefined;
  /**
   * Asset Metadata
   * @member {Array.<String>} meta
   */
  exports.prototype['meta'] = undefined;
  /**
   * Asset's Images'
   * @member {Object} images
   */
  exports.prototype['images'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",
    /**
     * value: "Inactive"
     * @const
     */
    "Inactive": "Inactive"  };

  /**
   * Allowed values for the <code>published</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PublishedEnum = {
    /**
     * value: "Yes"
     * @const
     */
    "Yes": "Yes",
    /**
     * value: "No"
     * @const
     */
    "No": "No"  };


  return exports;
}));


