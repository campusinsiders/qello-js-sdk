/**
 * Qello API
 * REST API <!-- <br/> <br/> <a href='#' id='' onclick='showRestJSONObjectsHttpAPI();'>Qello API (JSON Requests)</a> -->
 *
 * OpenAPI spec version: 1.1.4
 * Contact: contact@qello.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Asset', 'model/AssetSearchItem', 'model/AssetsList', 'model/AssetsResult', 'model/Avatar', 'model/AvatarsList', 'model/AvatarsResult', 'model/Collection', 'model/CollectionAsset', 'model/CollectionAssetList', 'model/CollectionAssetResult', 'model/CollectionsList', 'model/CollectionsResult', 'model/ContentList', 'model/ContentResult', 'model/Device', 'model/Event', 'model/EventResult', 'model/EventsList', 'model/GenerateTokenResult', 'model/LoginObject', 'model/PasswordRequestResult', 'model/PasswordResetResult', 'model/Profile', 'model/ProfileResult', 'model/ProfileTokenObject', 'model/ProfilesList', 'model/RegisterObject', 'model/RegisterResult', 'model/ResetUrlObject', 'model/Retoken', 'model/RetokenResult', 'model/SearchAssetsList', 'model/SearchAssetsObject', 'model/SearchResult', 'model/Session', 'model/SessionRecord', 'model/SessionResult', 'model/SpotlightResult', 'model/SpotlightRow', 'model/StatsList', 'model/StatsResult', 'model/Status', 'model/Subscription', 'model/Tag', 'model/TagSearchItem', 'model/TagsList', 'model/TagsResult', 'model/Timer', 'model/TimerObject', 'model/TimerResult', 'model/Token', 'model/TokenResult', 'model/User', 'model/UserObject', 'model/UserResult', 'api/AssetsApi', 'api/AvatarsApi', 'api/BrokerApi', 'api/ChannelsApi', 'api/CollectionsApi', 'api/ContentApi', 'api/ContentsearchApi', 'api/DeviceApi', 'api/EventsApi', 'api/LiveeventsApi', 'api/ProfileApi', 'api/ScheduleApi', 'api/SearchApi', 'api/SessionApi', 'api/SpotlightApi', 'api/StatsApi', 'api/SubassetsApi', 'api/TagsApi', 'api/TimerApi', 'api/TokenApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Asset'), require('./model/AssetSearchItem'), require('./model/AssetsList'), require('./model/AssetsResult'), require('./model/Avatar'), require('./model/AvatarsList'), require('./model/AvatarsResult'), require('./model/Collection'), require('./model/CollectionAsset'), require('./model/CollectionAssetList'), require('./model/CollectionAssetResult'), require('./model/CollectionsList'), require('./model/CollectionsResult'), require('./model/ContentList'), require('./model/ContentResult'), require('./model/Device'), require('./model/Event'), require('./model/EventResult'), require('./model/EventsList'), require('./model/GenerateTokenResult'), require('./model/LoginObject'), require('./model/PasswordRequestResult'), require('./model/PasswordResetResult'), require('./model/Profile'), require('./model/ProfileResult'), require('./model/ProfileTokenObject'), require('./model/ProfilesList'), require('./model/RegisterObject'), require('./model/RegisterResult'), require('./model/ResetUrlObject'), require('./model/Retoken'), require('./model/RetokenResult'), require('./model/SearchAssetsList'), require('./model/SearchAssetsObject'), require('./model/SearchResult'), require('./model/Session'), require('./model/SessionRecord'), require('./model/SessionResult'), require('./model/SpotlightResult'), require('./model/SpotlightRow'), require('./model/StatsList'), require('./model/StatsResult'), require('./model/Status'), require('./model/Subscription'), require('./model/Tag'), require('./model/TagSearchItem'), require('./model/TagsList'), require('./model/TagsResult'), require('./model/Timer'), require('./model/TimerObject'), require('./model/TimerResult'), require('./model/Token'), require('./model/TokenResult'), require('./model/User'), require('./model/UserObject'), require('./model/UserResult'), require('./api/AssetsApi'), require('./api/AvatarsApi'), require('./api/BrokerApi'), require('./api/ChannelsApi'), require('./api/CollectionsApi'), require('./api/ContentApi'), require('./api/ContentsearchApi'), require('./api/DeviceApi'), require('./api/EventsApi'), require('./api/LiveeventsApi'), require('./api/ProfileApi'), require('./api/ScheduleApi'), require('./api/SearchApi'), require('./api/SessionApi'), require('./api/SpotlightApi'), require('./api/StatsApi'), require('./api/SubassetsApi'), require('./api/TagsApi'), require('./api/TimerApi'), require('./api/TokenApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, Asset, AssetSearchItem, AssetsList, AssetsResult, Avatar, AvatarsList, AvatarsResult, Collection, CollectionAsset, CollectionAssetList, CollectionAssetResult, CollectionsList, CollectionsResult, ContentList, ContentResult, Device, Event, EventResult, EventsList, GenerateTokenResult, LoginObject, PasswordRequestResult, PasswordResetResult, Profile, ProfileResult, ProfileTokenObject, ProfilesList, RegisterObject, RegisterResult, ResetUrlObject, Retoken, RetokenResult, SearchAssetsList, SearchAssetsObject, SearchResult, Session, SessionRecord, SessionResult, SpotlightResult, SpotlightRow, StatsList, StatsResult, Status, Subscription, Tag, TagSearchItem, TagsList, TagsResult, Timer, TimerObject, TimerResult, Token, TokenResult, User, UserObject, UserResult, AssetsApi, AvatarsApi, BrokerApi, ChannelsApi, CollectionsApi, ContentApi, ContentsearchApi, DeviceApi, EventsApi, LiveeventsApi, ProfileApi, ScheduleApi, SearchApi, SessionApi, SpotlightApi, StatsApi, SubassetsApi, TagsApi, TimerApi, TokenApi, UsersApi) {
  'use strict';

  /**
   * REST_API____br_br_a_href_id_onclickshowRestJSONObjectsHttpAPI_Qello_API__JSON_Requestsa___.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var QelloApi = require('index'); // See note below*.
   * var xxxSvc = new QelloApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new QelloApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new QelloApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new QelloApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.1.4
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Asset model constructor.
     * @property {module:model/Asset}
     */
    Asset: Asset,
    /**
     * The AssetSearchItem model constructor.
     * @property {module:model/AssetSearchItem}
     */
    AssetSearchItem: AssetSearchItem,
    /**
     * The AssetsList model constructor.
     * @property {module:model/AssetsList}
     */
    AssetsList: AssetsList,
    /**
     * The AssetsResult model constructor.
     * @property {module:model/AssetsResult}
     */
    AssetsResult: AssetsResult,
    /**
     * The Avatar model constructor.
     * @property {module:model/Avatar}
     */
    Avatar: Avatar,
    /**
     * The AvatarsList model constructor.
     * @property {module:model/AvatarsList}
     */
    AvatarsList: AvatarsList,
    /**
     * The AvatarsResult model constructor.
     * @property {module:model/AvatarsResult}
     */
    AvatarsResult: AvatarsResult,
    /**
     * The Collection model constructor.
     * @property {module:model/Collection}
     */
    Collection: Collection,
    /**
     * The CollectionAsset model constructor.
     * @property {module:model/CollectionAsset}
     */
    CollectionAsset: CollectionAsset,
    /**
     * The CollectionAssetList model constructor.
     * @property {module:model/CollectionAssetList}
     */
    CollectionAssetList: CollectionAssetList,
    /**
     * The CollectionAssetResult model constructor.
     * @property {module:model/CollectionAssetResult}
     */
    CollectionAssetResult: CollectionAssetResult,
    /**
     * The CollectionsList model constructor.
     * @property {module:model/CollectionsList}
     */
    CollectionsList: CollectionsList,
    /**
     * The CollectionsResult model constructor.
     * @property {module:model/CollectionsResult}
     */
    CollectionsResult: CollectionsResult,
    /**
     * The ContentList model constructor.
     * @property {module:model/ContentList}
     */
    ContentList: ContentList,
    /**
     * The ContentResult model constructor.
     * @property {module:model/ContentResult}
     */
    ContentResult: ContentResult,
    /**
     * The Device model constructor.
     * @property {module:model/Device}
     */
    Device: Device,
    /**
     * The Event model constructor.
     * @property {module:model/Event}
     */
    Event: Event,
    /**
     * The EventResult model constructor.
     * @property {module:model/EventResult}
     */
    EventResult: EventResult,
    /**
     * The EventsList model constructor.
     * @property {module:model/EventsList}
     */
    EventsList: EventsList,
    /**
     * The GenerateTokenResult model constructor.
     * @property {module:model/GenerateTokenResult}
     */
    GenerateTokenResult: GenerateTokenResult,
    /**
     * The LoginObject model constructor.
     * @property {module:model/LoginObject}
     */
    LoginObject: LoginObject,
    /**
     * The PasswordRequestResult model constructor.
     * @property {module:model/PasswordRequestResult}
     */
    PasswordRequestResult: PasswordRequestResult,
    /**
     * The PasswordResetResult model constructor.
     * @property {module:model/PasswordResetResult}
     */
    PasswordResetResult: PasswordResetResult,
    /**
     * The Profile model constructor.
     * @property {module:model/Profile}
     */
    Profile: Profile,
    /**
     * The ProfileResult model constructor.
     * @property {module:model/ProfileResult}
     */
    ProfileResult: ProfileResult,
    /**
     * The ProfileTokenObject model constructor.
     * @property {module:model/ProfileTokenObject}
     */
    ProfileTokenObject: ProfileTokenObject,
    /**
     * The ProfilesList model constructor.
     * @property {module:model/ProfilesList}
     */
    ProfilesList: ProfilesList,
    /**
     * The RegisterObject model constructor.
     * @property {module:model/RegisterObject}
     */
    RegisterObject: RegisterObject,
    /**
     * The RegisterResult model constructor.
     * @property {module:model/RegisterResult}
     */
    RegisterResult: RegisterResult,
    /**
     * The ResetUrlObject model constructor.
     * @property {module:model/ResetUrlObject}
     */
    ResetUrlObject: ResetUrlObject,
    /**
     * The Retoken model constructor.
     * @property {module:model/Retoken}
     */
    Retoken: Retoken,
    /**
     * The RetokenResult model constructor.
     * @property {module:model/RetokenResult}
     */
    RetokenResult: RetokenResult,
    /**
     * The SearchAssetsList model constructor.
     * @property {module:model/SearchAssetsList}
     */
    SearchAssetsList: SearchAssetsList,
    /**
     * The SearchAssetsObject model constructor.
     * @property {module:model/SearchAssetsObject}
     */
    SearchAssetsObject: SearchAssetsObject,
    /**
     * The SearchResult model constructor.
     * @property {module:model/SearchResult}
     */
    SearchResult: SearchResult,
    /**
     * The Session model constructor.
     * @property {module:model/Session}
     */
    Session: Session,
    /**
     * The SessionRecord model constructor.
     * @property {module:model/SessionRecord}
     */
    SessionRecord: SessionRecord,
    /**
     * The SessionResult model constructor.
     * @property {module:model/SessionResult}
     */
    SessionResult: SessionResult,
    /**
     * The SpotlightResult model constructor.
     * @property {module:model/SpotlightResult}
     */
    SpotlightResult: SpotlightResult,
    /**
     * The SpotlightRow model constructor.
     * @property {module:model/SpotlightRow}
     */
    SpotlightRow: SpotlightRow,
    /**
     * The StatsList model constructor.
     * @property {module:model/StatsList}
     */
    StatsList: StatsList,
    /**
     * The StatsResult model constructor.
     * @property {module:model/StatsResult}
     */
    StatsResult: StatsResult,
    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status: Status,
    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription: Subscription,
    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag: Tag,
    /**
     * The TagSearchItem model constructor.
     * @property {module:model/TagSearchItem}
     */
    TagSearchItem: TagSearchItem,
    /**
     * The TagsList model constructor.
     * @property {module:model/TagsList}
     */
    TagsList: TagsList,
    /**
     * The TagsResult model constructor.
     * @property {module:model/TagsResult}
     */
    TagsResult: TagsResult,
    /**
     * The Timer model constructor.
     * @property {module:model/Timer}
     */
    Timer: Timer,
    /**
     * The TimerObject model constructor.
     * @property {module:model/TimerObject}
     */
    TimerObject: TimerObject,
    /**
     * The TimerResult model constructor.
     * @property {module:model/TimerResult}
     */
    TimerResult: TimerResult,
    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token: Token,
    /**
     * The TokenResult model constructor.
     * @property {module:model/TokenResult}
     */
    TokenResult: TokenResult,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserObject model constructor.
     * @property {module:model/UserObject}
     */
    UserObject: UserObject,
    /**
     * The UserResult model constructor.
     * @property {module:model/UserResult}
     */
    UserResult: UserResult,
    /**
     * The AssetsApi service constructor.
     * @property {module:api/AssetsApi}
     */
    AssetsApi: AssetsApi,
    /**
     * The AvatarsApi service constructor.
     * @property {module:api/AvatarsApi}
     */
    AvatarsApi: AvatarsApi,
    /**
     * The BrokerApi service constructor.
     * @property {module:api/BrokerApi}
     */
    BrokerApi: BrokerApi,
    /**
     * The ChannelsApi service constructor.
     * @property {module:api/ChannelsApi}
     */
    ChannelsApi: ChannelsApi,
    /**
     * The CollectionsApi service constructor.
     * @property {module:api/CollectionsApi}
     */
    CollectionsApi: CollectionsApi,
    /**
     * The ContentApi service constructor.
     * @property {module:api/ContentApi}
     */
    ContentApi: ContentApi,
    /**
     * The ContentsearchApi service constructor.
     * @property {module:api/ContentsearchApi}
     */
    ContentsearchApi: ContentsearchApi,
    /**
     * The DeviceApi service constructor.
     * @property {module:api/DeviceApi}
     */
    DeviceApi: DeviceApi,
    /**
     * The EventsApi service constructor.
     * @property {module:api/EventsApi}
     */
    EventsApi: EventsApi,
    /**
     * The LiveeventsApi service constructor.
     * @property {module:api/LiveeventsApi}
     */
    LiveeventsApi: LiveeventsApi,
    /**
     * The ProfileApi service constructor.
     * @property {module:api/ProfileApi}
     */
    ProfileApi: ProfileApi,
    /**
     * The ScheduleApi service constructor.
     * @property {module:api/ScheduleApi}
     */
    ScheduleApi: ScheduleApi,
    /**
     * The SearchApi service constructor.
     * @property {module:api/SearchApi}
     */
    SearchApi: SearchApi,
    /**
     * The SessionApi service constructor.
     * @property {module:api/SessionApi}
     */
    SessionApi: SessionApi,
    /**
     * The SpotlightApi service constructor.
     * @property {module:api/SpotlightApi}
     */
    SpotlightApi: SpotlightApi,
    /**
     * The StatsApi service constructor.
     * @property {module:api/StatsApi}
     */
    StatsApi: StatsApi,
    /**
     * The SubassetsApi service constructor.
     * @property {module:api/SubassetsApi}
     */
    SubassetsApi: SubassetsApi,
    /**
     * The TagsApi service constructor.
     * @property {module:api/TagsApi}
     */
    TagsApi: TagsApi,
    /**
     * The TimerApi service constructor.
     * @property {module:api/TimerApi}
     */
    TimerApi: TimerApi,
    /**
     * The TokenApi service constructor.
     * @property {module:api/TokenApi}
     */
    TokenApi: TokenApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
